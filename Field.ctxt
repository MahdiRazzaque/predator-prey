#BlueJ class context
comment0.target=Field
comment0.text=\r\n\ Represents\ a\ rectangular\ grid\ of\ field\ positions.\ Each\ position\ is\ able\ to\ store\ a\ single\r\n\ entity\ (e.g.,\ an\ animal\ or\ a\ plant).\ \ Provides\ methods\ for\ managing\ entities\ within\ the\ field,\r\n\ including\ placing,\ retrieving,\ and\ moving\ them.\r\n\r\n\ @author\ David\ J.\ Barnes\ and\ Michael\ K\u00F6lling\ and\ Mahdi\ Razzaque\r\n\ @version\ 10.02.2025\r\n
comment1.params=depth\ width
comment1.target=Field(int,\ int)
comment1.text=\r\n\ Represent\ a\ field\ of\ the\ given\ dimensions.\r\n\ @param\ depth\ The\ depth\ of\ the\ field.\r\n\ @param\ width\ The\ width\ of\ the\ field.\r\n
comment10.params=
comment10.target=void\ clear()
comment10.text=\r\n\ Empty\ the\ field.\r\n
comment11.params=
comment11.target=boolean\ isViable()
comment11.text=\r\n\ Checks\ if\ the\ field\ contains\ at\ least\ one\ living\ animal\r\n\ This\ method\ is\ used\ to\ determine\ if\ the\ ecosystem\ in\ the\ field\ is\ still\ viable\ in\ terms\ of\ having\ all\ necessary\ animal\ types.\r\n\ The\ method\ iterates\ through\ a\ list\ of\ entities\ present\ in\ the\ field\ and\ sets\ boolean\ flags\ if\ each\ animal\ type\ is\ found.\r\n\r\n\ @return\ true\ if\ there\ is\ at\ least\ one\ living\ Wolf,\ Bobcat,\ Squirrel,\ and\ Grouse\ in\ the\ field;\ false\ otherwise.\r\n\ \ \ \ \ \ \ \ \ Returns\ false\ if\ the\ field\ is\ empty\ or\ if\ none\ of\ the\ animal\ types\ are\ present.\r\n
comment12.params=
comment12.target=java.util.List\ getEntities()
comment12.text=\r\n\ Get\ the\ list\ of\ entity.\r\n
comment13.params=
comment13.target=int\ getDepth()
comment13.text=\r\n\ Return\ the\ depth\ of\ the\ field.\r\n\ @return\ The\ depth\ of\ the\ field.\r\n
comment14.params=
comment14.target=int\ getWidth()
comment14.text=\r\n\ Return\ the\ width\ of\ the\ field.\r\n\ @return\ The\ width\ of\ the\ field.\r\n
comment2.params=anEntity\ location
comment2.target=void\ placeEntity(Entity,\ Location)
comment2.text=\r\n\ Places\ an\ entity\ at\ the\ specified\ location\ in\ the\ field.\ If\ another\ entity\ already\r\n\ occupies\ that\ location,\ it\ is\ removed\ (replaced)\ by\ the\ new\ entity.\r\n\ @param\ anEntity\ The\ entity\ to\ be\ placed.\r\n\ @param\ location\ The\ location\ where\ the\ entity\ should\ be\ placed.\r\n
comment3.params=location
comment3.target=Entity\ getEntityAt(Location)
comment3.text=\r\n\ Returns\ the\ entity\ at\ the\ specified\ location\ in\ the\ field.\r\n\ @param\ location\ The\ location\ to\ check.\r\n\ @return\ The\ entity\ at\ the\ given\ location,\ or\ `null`\ if\ the\ location\ is\ empty.\r\n
comment4.params=location
comment4.target=java.util.List\ getFreeAdjacentLocations(Location)
comment4.text=\r\n\ Get\ a\ shuffled\ list\ of\ the\ free\ adjacent\ locations.\r\n\ @param\ location\ Get\ locations\ adjacent\ to\ this.\r\n\ @return\ A\ list\ of\ free\ adjacent\ locations.\r\n
comment5.params=location
comment5.target=java.util.List\ getAdjacentLocations(Location)
comment5.text=\r\n\ Return\ a\ shuffled\ list\ of\ locations\ adjacent\ to\ the\ given\ one.\r\n\ The\ list\ will\ not\ include\ the\ location\ itself.\r\n\ All\ locations\ will\ lie\ within\ the\ grid.\r\n\ @param\ location\ The\ location\ from\ which\ to\ generate\ adjacencies.\r\n\ @return\ A\ list\ of\ locations\ adjacent\ to\ that\ given.\r\n
comment6.params=
comment6.target=void\ fieldStats()
comment6.text=\r\n\ Prints\ out\ the\ current\ statistics\ of\ the\ field,\ including\ the\ number\ of\ each\ type\ of\ animal\ and\ plant.\r\n\ The\ output\ is\ formatted\ into\ tables\ for\ easy\ readability,\ displaying\ total\ counts\ as\ well\ as\r\n\ the\ number\ of\ males\ and\ females\ for\ each\ animal\ type.\r\n
comment7.params=entityClass
comment7.target=int\ getMaleCount(java.lang.Class)
comment7.text=\r\n\ Returns\ the\ number\ of\ living\ male\ entities\ of\ a\ given\ class\ in\ the\ field.\r\n\ @param\ entityClass\ The\ class\ of\ the\ entity\ to\ count.\r\n\ @return\ The\ number\ of\ living\ male\ entities\ of\ the\ specified\ class.\r\n
comment8.params=entityClass
comment8.target=int\ getFemaleCount(java.lang.Class)
comment8.text=\r\n\ Returns\ the\ number\ of\ living\ female\ entities\ of\ a\ given\ class\ in\ the\ field.\r\n\ @param\ entityClass\ The\ class\ of\ the\ entity\ to\ count.\r\n\ @return\ The\ number\ of\ living\ female\ entities\ of\ the\ specified\ class.\r\n
comment9.params=plantClass
comment9.target=int\ getPlantCount(java.lang.Class)
comment9.text=\r\n\ Returns\ the\ number\ of\ living\ plants\ of\ a\ given\ class\ in\ the\ field.\r\n\ @param\ plantClass\ The\ class\ of\ the\ plant\ to\ count.\r\n\ @return\ The\ number\ of\ living\ plants\ of\ the\ specified\ class.\r\n
numComments=15
